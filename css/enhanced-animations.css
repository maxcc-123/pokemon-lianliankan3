/* 增强动画效果 */

/* 卡片悬停效果增强 */
.cell:hover {
    transform: translateY(-5px) scale(1.05);
    box-shadow: 0 8px 15px rgba(0, 0, 0, 0.1);
    z-index: 10;
}

/* 卡片选中效果 */
.cell.selected {
    animation: selected-pulse 1.5s infinite;
    box-shadow: 0 0 15px rgba(63, 81, 181, 0.7);
    z-index: 5;
}

@keyframes selected-pulse {
    0% { box-shadow: 0 0 5px rgba(63, 81, 181, 0.7); }
    50% { box-shadow: 0 0 20px rgba(63, 81, 181, 0.9); }
    100% { box-shadow: 0 0 5px rgba(63, 81, 181, 0.7); }
}

/* 卡片匹配效果增强 */
.cell.matched {
    animation: matched-animation 0.8s forwards;
}

@keyframes matched-animation {
    0% { transform: scale(1); opacity: 1; }
    20% { transform: scale(1.2); opacity: 0.9; }
    100% { transform: scale(0); opacity: 0; }
}

/* 按钮悬停效果增强 */
button:hover {
    transform: translateY(-3px);
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
}

button:active {
    transform: translateY(1px);
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
}

/* 游戏开始动画 */
.game-start-animation .cell {
    animation: cell-appear 0.5s backwards;
}

@keyframes cell-appear {
    from { transform: scale(0) rotate(180deg); opacity: 0; }
    to { transform: scale(1) rotate(0deg); opacity: 1; }
}

/* 为每个单元格设置不同的动画延迟 */
.game-start-animation .cell:nth-child(1) { animation-delay: 0.05s; }
.game-start-animation .cell:nth-child(2) { animation-delay: 0.1s; }
.game-start-animation .cell:nth-child(3) { animation-delay: 0.15s; }
.game-start-animation .cell:nth-child(4) { animation-delay: 0.2s; }
.game-start-animation .cell:nth-child(5) { animation-delay: 0.25s; }
.game-start-animation .cell:nth-child(6) { animation-delay: 0.3s; }
.game-start-animation .cell:nth-child(7) { animation-delay: 0.35s; }
.game-start-animation .cell:nth-child(8) { animation-delay: 0.4s; }
/* 可以继续添加更多的延迟... */

/* 提示动画增强 */
.cell.hint {
    animation: hint-animation 1.5s infinite;
}

@keyframes hint-animation {
    0% { transform: scale(1); box-shadow: 0 0 5px rgba(255, 193, 7, 0.7); }
    50% { transform: scale(1.1); box-shadow: 0 0 20px rgba(255, 193, 7, 0.9); }
    100% { transform: scale(1); box-shadow: 0 0 5px rgba(255, 193, 7, 0.7); }
}

/* 路径连接线动画增强 */
.path-line {
    stroke-width: 4;
    stroke-linecap: round;
    stroke-linejoin: round;
    filter: drop-shadow(0 0 3px rgba(78, 115, 223, 0.5));
}

/* 连击文字动画增强 */
.combo-display {
    font-size: 48px;
    text-shadow: 0 0 15px rgba(255, 255, 255, 0.9), 0 0 30px rgba(233, 69, 96, 0.7);
    animation: combo-enhanced-animation 1.2s ease-out;
}

@keyframes combo-enhanced-animation {
    0% { transform: translate(-50%, -50%) scale(0.5); opacity: 0; filter: blur(5px); }
    10% { transform: translate(-50%, -50%) scale(1.5); opacity: 1; filter: blur(0); }
    50% { transform: translate(-50%, -50%) scale(1.2); opacity: 1; filter: blur(0); }
    100% { transform: translate(-50%, -50%) scale(2); opacity: 0; filter: blur(10px); }
}

/* 游戏结束倒计时动画增强 */
.ending-countdown {
    text-shadow: 0 0 30px rgba(255, 255, 255, 0.9), 0 0 60px rgba(78, 115, 223, 0.8);
}

.pulse {
    animation: enhanced-pulse-animation 1s cubic-bezier(0.215, 0.610, 0.355, 1.000);
}

@keyframes enhanced-pulse-animation {
    0% { transform: translate(-50%, -50%) scale(0.3); opacity: 0; filter: blur(10px); }
    30% { transform: translate(-50%, -50%) scale(1.3); opacity: 1; filter: blur(0); }
    70% { transform: translate(-50%, -50%) scale(0.9); opacity: 1; filter: blur(0); }
    100% { transform: translate(-50%, -50%) scale(1); opacity: 1; filter: blur(0); }
}

/* 背景动画效果 */
.animated-background {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -1;
    background: linear-gradient(135deg, #EEF5FE 0%, #E6F0FD 100%);
    overflow: hidden;
}

.animated-background::before {
    content: '';
    position: absolute;
    width: 200%;
    height: 200%;
    top: -50%;
    left: -50%;
    background: radial-gradient(circle, rgba(63, 81, 181, 0.05) 0%, rgba(63, 81, 181, 0) 70%);
    animation: rotate 60s linear infinite;
}

@keyframes rotate {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
}

/* 分数增加动画 */
.score-increment {
    position: absolute;
    color: #1cc88a;
    font-weight: bold;
    pointer-events: none;
    animation: score-float 1.5s forwards;
    z-index: 100;
}

@keyframes score-float {
    0% { transform: translateY(0) scale(0.8); opacity: 0; }
    10% { transform: translateY(0) scale(1.2); opacity: 1; }
    100% { transform: translateY(-50px) scale(1); opacity: 0; }
}

/* 洗牌按钮动画 */
.shuffle-btn-active {
    animation: shuffle-btn-animation 0.5s;
}

@keyframes shuffle-btn-animation {
    0% { transform: rotate(0deg); }
    25% { transform: rotate(-15deg); }
    75% { transform: rotate(15deg); }
    100% { transform: rotate(0deg); }
}

/* 游戏胜利烟花效果 */
.firework {
    position: absolute;
    width: 5px;
    height: 5px;
    border-radius: 50%;
    box-shadow: 0 0 10px 2px;
    animation: firework-animation 2s forwards;
    z-index: 1000;
    pointer-events: none;
}

@keyframes firework-animation {
    0% { transform: scale(0); opacity: 1; }
    50% { transform: scale(30); opacity: 0.5; }
    100% { transform: scale(40); opacity: 0; }
}

/* 添加连接线动画 */
@keyframes dash-animation {
    to {
        stroke-dashoffset: 0;
    }
}

/* 粒子效果样式 */
.particle {
    position: fixed;
    width: 5px;
    height: 5px;
    border-radius: 50%;
    pointer-events: none;
    z-index: 200;
}

/* 胜利文字样式 */
.win-text {
    animation: win-text-glow 2s infinite alternate;
}

@keyframes win-text-glow {
    from { text-shadow: 0 0 20px rgba(255, 215, 64, 0.8); }
    to { text-shadow: 0 0 40px rgba(255, 215, 64, 1), 0 0 80px rgba(255, 215, 64, 0.5); }
}

/* 失败文字样式 */
.lose-text {
    animation: lose-text-glow 2s infinite alternate;
}

@keyframes lose-text-glow {
    from { text-shadow: 0 0 20px rgba(255, 82, 82, 0.8); }
    to { text-shadow: 0 0 40px rgba(255, 82, 82, 1), 0 0 80px rgba(255, 82, 82, 0.5); }
}

/* 卡片匹配连接线 */
.connection-line {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 100;
}

/* 卡片翻转效果优化 */
.cell {
    perspective: 1000px;
    transform-style: preserve-3d;
}

.icon-container {
    transition: transform 0.6s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    transform-style: preserve-3d;
    position: relative;
    width: 100%;
    height: 100%;
}

.icon-container.flipped {
    transform: rotateY(180deg);
}

/* 确保卡片正面和背面正确显示 */
.element-icon, .card-back {
    backface-visibility: hidden;
    -webkit-backface-visibility: hidden; /* Safari 支持 */
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    border-radius: 8px;
}

.element-icon {
    transform: rotateY(0deg);
    background-color: #f8f9fa;
    z-index: 2;
}

.card-back {
    transform: rotateY(180deg);
    background-color: #e9ecef;
    z-index: 1;
}

/* 确保图片在翻转过程中可见 */
.card-back img {
    width: 75%;
    height: 75%;
    object-fit: contain;
    backface-visibility: hidden;
    -webkit-backface-visibility: hidden;
    filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.2));
}

/* 增强洗牌动画 */
.shuffling {
    transition: transform 0.5s cubic-bezier(0.68, -0.55, 0.27, 1.55);
}

/* 添加新的动画效果 */

/* 卡片悬浮光效 */
.cell:hover::before {
    content: '';
    position: absolute;
    top: -10px;
    left: -10px;
    right: -10px;
    bottom: -10px;
    background: radial-gradient(circle at center, rgba(78, 115, 223, 0.3) 0%, rgba(78, 115, 223, 0) 70%);
    border-radius: 20px;
    z-index: -1;
    opacity: 0;
    animation: hover-glow 1s ease-in-out infinite alternate;
}

@keyframes hover-glow {
    from { opacity: 0; }
    to { opacity: 1; }
}

/* 按钮点击波纹效果 */
.ripple {
    position: absolute;
    border-radius: 50%;
    background-color: rgba(255, 255, 255, 0.4);
    transform: scale(0);
    animation: ripple-animation 0.6s linear;
    pointer-events: none;
}

@keyframes ripple-animation {
    to {
        transform: scale(4);
        opacity: 0;
    }
}

/* 成就解锁星星效果 */
.achievement-star {
    position: absolute;
    width: 10px;
    height: 10px;
    background-color: #ffd740;
    clip-path: polygon(50% 0%, 61% 35%, 98% 35%, 68% 57%, 79% 91%, 50% 70%, 21% 91%, 32% 57%, 2% 35%, 39% 35%);
    animation: star-animation 1s linear forwards;
}

@keyframes star-animation {
    0% { transform: scale(0) rotate(0deg); opacity: 1; }
    50% { transform: scale(1.5) rotate(180deg); opacity: 0.8; }
    100% { transform: scale(0) rotate(360deg); opacity: 0; }
}

/* 游戏板加载动画 */
.loading-board {
    position: relative;
}

.loading-board::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, 
        rgba(255,255,255,0) 0%, 
        rgba(255,255,255,0.5) 50%, 
        rgba(255,255,255,0) 100%);
    animation: loading-shine 1.5s infinite;
}

@keyframes loading-shine {
    0% { transform: translateX(-100%); }
    100% { transform: translateX(100%); }
}

/* 倒计时警告效果 */
.timer-warning {
    animation: timer-pulse 1s infinite alternate;
    color: #e74a3b !important;
}

@keyframes timer-pulse {
    from { opacity: 0.7; }
    to { opacity: 1; transform: scale(1.1); }
}

/* 3D卡片翻转效果增强 */
.cell {
    transform-style: preserve-3d;
    perspective: 1000px;
}

.icon-container {
    transform-style: preserve-3d;
    transition: transform 0.8s cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

.icon-container.flipped {
    transform: rotateY(180deg);
}

/* 卡片匹配时的粒子爆炸效果 */
@keyframes particle-explosion {
    0% { transform: translate(0, 0) scale(1); opacity: 1; }
    100% { transform: translate(var(--tx), var(--ty)) scale(0); opacity: 0; }
}

/* 游戏胜利彩带效果 */
.ribbon {
    position: absolute;
    width: 10px;
    height: 30px;
    background: linear-gradient(to bottom, #4e73df, #224abe);
    animation: ribbon-fall 4s linear forwards;
    z-index: 1000;
}

@keyframes ribbon-fall {
    0% { 
        transform: translateY(-100vh) rotate(0deg); 
        height: 30px;
    }
    50% { 
        height: 100px;
        opacity: 1;
    }
    100% { 
        transform: translateY(100vh) rotate(540deg); 
        height: 10px;
        opacity: 0;
    }
}

/* 游戏结束时的震动效果 */
.shake {
    animation: shake-animation 0.5s cubic-bezier(.36,.07,.19,.97) both;
}

@keyframes shake-animation {
    10%, 90% { transform: translate3d(-1px, 0, 0); }
    20%, 80% { transform: translate3d(2px, 0, 0); }
    30%, 50%, 70% { transform: translate3d(-4px, 0, 0); }
    40%, 60% { transform: translate3d(4px, 0, 0); }
}